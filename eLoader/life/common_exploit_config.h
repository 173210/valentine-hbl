#ifndef COMMON_EXPLOIT_CONFIG
#define COMMON_EXPLOIT_CONFIG

// Shared for all "life" exploits

// Define to free additional modules (net modules, etc...) (e.g. patapon2 demo)
// Not all games need that
#define UNLOAD_ADDITIONAL_MODULES

// Define if your exploit does not have access to  sceGeEdramGetSize
// You will see a linker message in the form:
//  undefined reference to `sceGeEdramGetSize'
#define FORCE_HARDCODED_VRAM_SIZE

// define if your exploit does not have access to sceKernelDcacheWritebackInvalidateAll
#undef CLEAR_CACHE
#define CLEAR_CACHE sceKernelDcacheWritebackAll()
#define HOOK_sceKernelDcacheWritebackInvalidateAll_WITH_sceKernelDcacheWritebackAll

// Hooks (function overrides/replacements)
// Failing calls to sceUtilityCheckNetParam will probably deactivate net access
#define HOOK_ERROR_sceUtilityCheckNetParam
#define HOOK_sceAudioGetChannelRestLen_WITH_sceAudioGetChannelRestLength
#define HOOK_sceAudioOutput_WITH_sceAudioOutputBlocking
#define HOOK_sceAudioOutput2GetRestSample_WITH_sceAudioGetChannelRestLength
#define HOOK_sceCtrlPeekBufferPositive_WITH_sceCtrlReadBufferPositive
#define HOOK_sceRtcGetCurrentClock_WITH_sceRtcGetCurrentClockLocalTime


#define HOOK_sceImposeSetHomePopup_WITH_dummy
#define HOOK_sceCtrlSetIdleCancelThreshold_WITH_dummy
#define HOOK_sceKernelWakeupThread_WITH_dummy

// P5 STUBS causes a crash with this exploit on 6.60, disabling for now
#define DISABLE_P5_STUBS

//all files of HBL in one single folder, no subfolders
#define FLAT_FOLDER
#undef EBOOT_PATH
#define EBOOT_PATH HBL_ROOT"GAME/EBOOT.PBP"
#undef ELF_PATH
#define ELF_PATH HBL_ROOT"GAME/eboot.elf"
#undef HBL_PATH
#define HBL_PATH HBL_ROOT HBL_BIN
#undef LIB_PATH
#define LIB_PATH HBL_ROOT
#undef IMPORTS_PATH
# define IMPORTS_PATH HBL_ROOT"imports.config"


// sceIoCHDIR crashes, don't call it, at all :/
#define CHDIR_CRASH

// Adds missing "." ".." entries on Vita
#define VITA_DIR_FIX

// Perfect syscall code

// For which firmware versions is perfect syscall estimation available?
#define SYSCALLS_KNOWN_FOR_FIRMWARES {  }
#define SYSCALLS_KNOWN_FOR_GO_FIRMWARES { }

// Reference library for syscall estimation, all syscalls for this library must be known
#define SYSCALL_REFERENCE_LIBRARY "sceOpenPSID"

// Syscall offsets, must be defined for all firmwares in SYSCALLS_KNOWN_FOR_FIRMWARES
//#define SYSCALL_OFFSETS_500     {  }
//#define SYSCALL_OFFSETS_500_CFW {  }

//#define SYSCALL_OFFSETS_550     {  }
//#define SYSCALL_OFFSETS_550_CFW {  }

//#define SYSCALL_OFFSETS_570    {  }
//#define SYSCALL_OFFSETS_570_GO {  }

//#define SYSCALL_OFFSETS_600    {  }
//#define SYSCALL_OFFSETS_600_GO {  }


// Kernel memory dump offsets for the PSP GO
//#define SYSCALL_KERNEL_OFFSETS_620 {  }
//#define SYSCALL_KERNEL_OFFSETS_630 { } // Not available
//#define SYSCALL_KERNEL_OFFSETS_635 { } // Not available

#endif