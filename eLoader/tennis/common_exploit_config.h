#ifndef COMMON_EXPLOIT_CONFIG
#define COMMON_EXPLOIT_CONFIG

// Shared for all "tennis" exploits

// Define to free additional modules (net modules, etc...) (e.g. patapon2 demo)
// Not all games need that
#define UNLOAD_ADDITIONAL_MODULES

// Hooks (function overrides/replacements)
#define CHDIR_CRASH
#define HOOK_AUDIOFUNCTIONS
#define HOOK_sceRtcGetCurrentClock_WITH_sceRtcGetCurrentClockLocalTime
#define HOOK_sceRtcGetCurrentTick
#define HOOK_sceKernelReceiveMsgPipe_WITH_sceKernelTryReceiveMsgPipe
#define HOOK_sceAudioOutputBlocking_WITH_sceAudioOutputPannedBlocking
#define HOOK_sceAudioGetChannelRestLen_WITH_sceAudioGetChannelRestLength
#define HOOK_sceAudioOutput_WITH_sceAudioOutputBlocking
#define HOOK_sceKernelSendMsgPipe_WITH_sceKernelTrySendMsgPipe
//#define HOOK_CHDIR_AND_FRIENDS
// Failing calls to sceUtilityCheckNetParam will probably deactivate net access
#define HOOK_ERROR_sceUtilityCheckNetParam
#define HOOK_POWERFUNCTIONS
#define HOOK_UTILITY
#define LOAD_MODULE
//#define HOOK_sceKernelLoadModule
#define HOOK_sceKernelGetThreadId
#define HOOK_sceAudioOutput2GetRestSample_WITH_sceAudioGetChannelRestLength
#define HOOK_mersenne_twister_rdm
#define HOOK_sceDisplayWaitVblankStartCB_WITH_sceDisplayWaitVblankStart
#define HOOK_sceKernelDcacheWritebackRange_WITH_sceKernelDcacheWritebackAll
#define HOOK_sceKernelDcacheWritebackInvalidateRange_WITH_sceKernelDcacheWritebackInvalidateAll
#define HOOK_sceAudioOutputPanned_WITH_sceAudioOutputPannedBlocking
#define HOOK_sceKernelTerminateThread_WITH_sceKernelTerminateDeleteThread
#define HOOK_sceKernelChangeCurrentThreadAttr_WITH_dummy	// TODO : fix correctly to make Desert Stunts entirely fonctionnal
#define HOOK_sceCtrlSetIdleCancelThreshold_WITH_dummy		// TODO : fix correctly to make Desert Stunts entirely fonctionnal
#define HOOK_sceImposeSetHomePopup_WITH_dummy
#define HOOK_sceKernelReferThreadStatus_WITH_dummy
#define HOOK_sceKernelTotalFreeMemSize
#define HOOK_sceKernelWakeupThread_WITH_dummy
#define HOOK_sceDisplayGetVcount_WITH_dummy


// Define to fix a scratchpad corruption by PSPFiler, making sceKernelReleaseSubIntrHandler crash
//#define SUB_INTR_HANDLER_CLEANUP_filer_FIX

//all files of HBL in one single folder, no subfolders
#define FLAT_FOLDER
#undef EBOOT_PATH
#define EBOOT_PATH HBL_ROOT"HARD_EBOOT.PBP"
#undef ELF_PATH
#define ELF_PATH HBL_ROOT"eboot.elf"
#undef HBL_PATH
#define HBL_PATH HBL_ROOT HBL_BIN
#undef LIB_PATH
#define LIB_PATH HBL_ROOT
#undef IMPORTS_PATH
#define IMPORTS_PATH HBL_ROOT"imports.config"


// sceIoCHDIR crashes, don't call it, at all :/
#define CHDIR_CRASH
// Adds missing "." ".." entries on Vita
#define VITA_DIR_FIX


// Syscall estimation

// For which firmware versions is perfect syscall estimation available?
#define SYSCALLS_KNOWN_FOR_FIRMWARES { 500, 503, 550, 551, 555, 570, 600, 610 }
#define SYSCALLS_KNOWN_FOR_GO_FIRMWARES { 570, 610, 620 }

// Reference library for syscall estimation, all syscalls for this library must be known
#define SYSCALL_REFERENCE_LIBRARY "sceOpenPSID"

// Syscall offsets, must be defined for all firmwares in SYSCALLS_KNOWN_FOR_FIRMWARES
#define SYSCALL_OFFSETS_500     { 0, 9, 152, 163, 200, 221, 243, 249, 293, 302, 320, 367, 394, 417, 433, 445, 503, 518, 572, 586, 748, 729, 545, 878 }
#define SYSCALL_OFFSETS_500_CFW { 0, 9, 152, 163, 200, 260, 282, 288, 332, 341, 359, 406, 433, 456, 472, 484, 542, 557, 611, 625, 807, 788, 584, 937 }

#define SYSCALL_OFFSETS_550     { 0, 9, 152, 163, 200, 222, 244, 250, 294, 303, 321, 368, 395, 418, 434, 446, 504, 519, 573, 587, 750, 731, 546, 880 }
#define SYSCALL_OFFSETS_550_CFW { 0, 9, 152, 163, 200, 261, 283, 289, 333, 342, 360, 407, 434, 457, 473, 485, 543, 558, 612, 626, 809, 790, 585, 939 }

#define SYSCALL_OFFSETS_570    { 0, 9, 161, 172, 209, 231, 254, 260, 308, 317, 335, 382, 409, 432, 452, 464, 522, 537, 590, 604, 769, 750, 563, (999) }
#define SYSCALL_OFFSETS_570_GO { 0, 9, 161, 172, 209, 231, 254, 260, 308, 317, 335, 382, 409, 432, 452, 464, 522, 537, 590, 604, 885, 866, 563, 1018 }

#define SYSCALL_OFFSETS_600    { 0, 9, 160, 171, 208, 230, 255, 261, 309, 318, 336, 484, 383, 406, 511, 426, 523, 538, 592, 606, 794, 772, 564, 927 }
#define SYSCALL_OFFSETS_600_GO { 0, 9, 160, 171, 208, 230, 255, 261, 309, 318, 336, 484, 383, 406, 511, 426, 523, 538, 592, 606, 906, 884, 564, (1039) }


// Kernel memory dump offsets for the PSP GO
#define SYSCALL_KERNEL_OFFSETS_620 { 0x0002094C, 0x000208FC, 0x000207BC, 0x0002071C, 0x000205DC, 0x000204EC, 0x0002049C, 0x0002044C, 0x000203AC, 0x0002B420, 0x0002B0D8, 0x000F8010, 0x0002A8F8, 0x000BEDA0, 0x0015A9A0, 0x000BE858, 0x0015A670, 0x00159E00, 0x001E6408, 0x001E5CD0, 0x0026A4D0, 0x0025B3A0, 0x001889A0 }
#define SYSCALL_KERNEL_OFFSETS_630 { } // Not available
#define SYSCALL_KERNEL_OFFSETS_635 { } // Not available

#endif