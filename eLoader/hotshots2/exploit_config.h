#ifndef EXPLOIT_CONFIG
#define EXPLOIT_CONFIG

//Where to load hbl.bin in Ram
// Has to be a place not occupied by the game
// a correct address can be found in an exploit with a call to sce_alloc
#define HBL_LOAD_ADDRESS 0x09EC8000

#define EV_ADDR_LIST { 0x08BB8818, 0x08BB87DC, 0x08B3C900 }

#define SEMA_ADDR_LIST { 0x08DECE8C, 0x08DECE88, 0x08DE6DDC, 0x08DE6DD8, 0x08DE0D2C, 0x08DE0D28, 0x08DDAC7C, 0x08DDAC78, 0x08BB8754, 0x08BB877C, 0x08BB8814, 0x08BB87D8, 0x08BB87D4, 0x08BB87D0, 0x08BB8314, 0x08E24110, 0x08E25BC0, 0x08AECF88, 0x08AECF90 }

#define TH_ADDR_LIST { 0x09F86C00, 0x09F8AC00, 0x09F96C00, 0x09FA2C00, 0x09FAEC00, 0x09FBAC00, 0x09FFEC00 }

#define GAME_FREEMEM_ADDR 0x08B3C8C0

// Define to free additional modules (net modules, etc...) (e.g. patapon2 demo)
#define UNLOAD_ADDITIONAL_MODULES

//Firmware Detection
//DETECT_FIRMWARE_ADDR is the address in Ram to look for
// The others are the value one should expect at this address
// We obviously want to look at an address that is constant for any given firmware, but different for 2 different firmwares
// Such an address (if it exists) can be found by comparing a good amount of user mem dumps
// Don't define DETECT_FIRMWARE_ADDR if you have no way to find the firmware
// Don't define a specific firmware value if you don't know it
#define DETECT_FIRMWARE_ADDR 0x08800B6C
#define DETECT_FIRMWARE_550 0x00000000
#define DETECT_FIRMWARE_600 0x06000010
#define DETECT_FIRMWARE_610 0x06010010
#define DETECT_FIRMWARE_620 0x06020010
#define DETECT_FIRMWARE_630 0x06030010
#define DETECT_FIRMWARE_631 0x06030110

// Syscall estimation

// All golf games share the same syscall data
#include "../minna2/exploit_syscalls.h"

#endif