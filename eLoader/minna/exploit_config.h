#ifndef EXPLOIT_CONFIG
#define EXPLOIT_CONFIG

//Most work in this file by J416

//Where to load hbl.bin in Ram
// Has to be a place not occupied by the game
// a correct address can be found in an exploit with a call to sce_alloc
#define HBL_LOAD_ADDRESS 0x09F10000

// Addresses where the threads to delete are defined
// can be found with psplink (thlist, then ... ?)
#define TH_ADDR_LIST {0x09FBF000, 0x08CF2870, 0x08CF2AA8, 0x08D120E8, 0x08D1817C, 0x08D1E210, 0x08D242A4, 0x08CF2A44, 0x08CF2A60}   

//Addresses where the event flags to delete can be found
//psplink evlist
#define EV_ADDR_LIST {0x08CF5C98}

//Addresses where the semaphores to delete can be found
//psplink semalist
#define SEMA_ADDR_LIST {0x08CF2A34, 0x08CF2AB0, 0x08CF2AB4, 0x08CF2A8C, 0x08D120EC, 0x08D120F0, 0x08D18180, 0x08D18184, 0x08D1E214, 0x08D1E218, 0x08D242A8, 0x08D242AC, 0x08A7CF9C, 0x08A7CF94}

// Undefine  to not Free the game module (e.g. patapon2 demo)
#define GAME_FREEMEM_ADDR 0x08D047C0

// Undefine to not free additional modules (net modules, etc...) (e.g. minna no golf)
//#define UNLOAD_ADDITIONAL_MODULES

//Firmware Detection
//DETECT_FIRMWARE_ADDR is the address in Ram to look for
// The others are the value one should expect at this address
// We obviously want to look at an address that is constant for any given firmware, but different for 2 different firmwares
// Such an address (if it exists) can be found by comparing a good amount of user mem dumps
// Don't define DETECT_FIRMWARE_ADDR if you have no way to find the firmware
// Don't define a specific firmware value if you don't know it
#define DETECT_FIRMWARE_ADDR 0x8800B6C
#define DETECT_FIRMWARE_550 0x00000000
#define DETECT_FIRMWARE_600 0x06000010
#define DETECT_FIRMWARE_610 0x06010010
#define DETECT_FIRMWARE_620 0x06020010
#define DETECT_FIRMWARE_630 0x06030010
#define DETECT_FIRMWARE_631 0x06030110


// Syscall estimation

// All golf games share the same syscall data
#include "exploit_syscalls.h"

#endif